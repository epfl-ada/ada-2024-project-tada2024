comput program , basic ( acronym beginn 's all-purpos symbol instruct code ) refer famili high-level program languag . origin design 1963 , john georg kemeni thoma eugen kurtz dartmouth colleg , provid access non-scienc student comput . time , nearli comput use requir write custom softwar , someth scientist mathematician tend . languag ( one variant anoth ) becam widespread home microcomput 1980 , remain popular day hand heavili evolv dialect . # # histori prior mid-1960 , comput extrem expens tool use special-purpos task . simpl batch process arrang ran singl `` job '' time , one anoth . 1960 , howev , faster afford comput becam avail . extra process power , comput would sometim sit idl , without job run . program languag batch program era tend design , like machin ran , specif purpos ( scientif formula calcul busi data process eventu text edit ) . sinc even newer less expens machin still major invest , strong tendenc consid effici ( ie , execut speed , ) import featur languag . gener , special languag difficult use wide dispar syntax . price decreas , possibl share comput access began move research lab commerci use . newer comput system support time-shar , system allow multipl user process use cpu memori . system oper system altern run process , give one run time cpu switch anoth . machin becom fast enough user could feel machin . theori , timeshar reduc cost comput tremend , singl machin could share among ( ) hundr user . # # # earli year — mini comput era origin basic languag design 1963 john kemeni thoma kurtz implement team dartmouth student direct . basic design allow student write program dartmouth time-shar system . intend address complex issu older languag new languag design specif new class user time-shar system allow — , less technic user mathemat background tradit user interest acquir . abl use comput support teach research quit attract enough . follow year , dialect basic appear , kemeni kurtz ' origin basic dialect becam known dartmouth basic . eight design principl basic : easi beginn use . general-purpos program languag . allow advanc featur ad expert ( keep languag simpl beginn ) . interact . provid clear friendli error messag . respond quickli small program . requir understand comput hardwar . shield user oper system . languag base partli fortran ii partli algol 60 , addit make suitabl timeshar . ( featur time-shar system joss corc , lesser extent lisp , also consid ) . preced teaching-languag experi dartmouth darsimco ( 1956 ) dope ( 1962 implement sap dart ( 1963 ) simplifi fortran ii ) . initi , basic concentr support straightforward mathemat work , matrix arithmet support initi implement batch languag full string function ad 1965 . basic first implement ge-265 mainfram support multipl termin . contrari popular belief , compil languag time introduct . also quit effici , beat fortran ii algol 60 implement 265 sever fairli comput intens program problem maxim simpson 's rule . design languag decid make compil avail without charg languag would becom widespread . also made avail high school dartmouth area put consider amount effort promot languag . result , knowledg basic becam rel widespread ( comput languag ) basic implement number manufactur , becom fairli popular newer minicomput like dec pdp seri data gener nova . instanc languag tend implement interpret , instead ( addit ) compil . sever year releas , highly-respect comput profession , notabl edsger w. dijkstra , express opinion use goto statement , exist mani languag includ basic , promot poor program practic . also derid basic slow ( interpret version slower equival compil version ) simpl ( mani version , especi small comput left import featur capabl ) . # # # explos growth — home comput era notwithstand languag 's use sever minicomput , introduct mit altair 8800 microcomput 1975 provid basic path univers . program languag requir memori ( and/or disk space ) avail small comput user could afford . slow memori access tape provid lack suitabl text editor , languag like basic could satisfi constraint attract . basic also advantag fairli well known young design took interest microcomput . kemeni kurtz 's earlier proselyt paid respect . one first appear 8080 machin like altair tini basic , simpl basic implement origin written dr. li-chen wang , port onto altair denni allison request bob albrecht ( later found dr. dobb 's journal ) . tini basic design full sourc code publish 1976 ddj . 1975 , mit releas altair basic , develop bill gate paul allen micro-soft . first altair version co-written gate , allen mont davidoff . version microsoft basic soon start appear platform licens , million copi variant soon use ; becam one standard languag appl ii ( base quit differ 6502 mpu ) . 1979 , microsoft talk sever microcomput vendor , includ ibm , licens basic interpret comput . version includ ibm pc rom chip pc without floppi disk automat boot basic like mani small comput . newer compani attempt follow success mit , imsai , north star appl , thu creat home comput industri ; meanwhil , basic becam standard featur home comput . came basic interpret rom , thu avoid unavail , expens , disk problem . soon mani million machin run basic variant around world , like far greater number user languag put togeth . dialect basic program languag . home comput 1980 rom-resid basic interpret . bbc publish bbc basic , develop acorn comput ltd , incorpor mani extra structur keyword , well comprehens versatil direct access oper system . also featur fulli integr assembl . bbc basic well-regard dialect , made transit origin bbc micro comput 30 platform . growth time basic , mani magazin publish creativ magazin includ complet sourc code game , util , program . given basic 's straightforward natur , consid simpl matter type code magazin execut program . differ magazin publish featur program specif comput , though basic program univers could input basic-us machin . # # # matur — person comput era mani newer basic version creat period . microsoft sold sever version basic ms-dos/ pc-do includ basica , gw-basic ( basica-compat version need ibm 's rom ) quickbas . turbo pascal-publish borland publish turbo basic 1.0 1985 ( successor version still market origin author name powerbas ) . languag introduc mani extens origin home comput basic , improv string manipul graphic support , access file system addit data type . import facil structur program , includ addit control structur proper subroutin support local variabl . howev , latter half 1980 newer comput far capabl resourc . time , comput progress hobbyist interest tool use primarili applic written other , program becam less import user . basic start reced import , though numer version remain avail . compil basic cbasic still use mani ibm 4690 os point sale system . basic 's fortun revers introduct visual basic microsoft . somewhat difficult consid languag basic , major shift orient toward object-ori event-driven perspect . could consid evolut languag , distinct featur earli dartmouth basic , line number input keyword , remain . mani basic dialect also sprung last year , includ bywat basic true basic ( direct successor dartmouth basic compani control kurtz ) . recent , remain commun use microsoft 's pre-visu basic product begun switch wholesal freebas , gpled compil move basic onto gcc backend . mani basic variant adapt written hobbyist , equip develop , other , rel simpl languag develop translat . exampl open sourc interpret , written c , minibas . ubiqu basic interpret person comput textbook includ simpl tri basic exercis encourag student experi mathemat comput concept classroom home comput . futurist sci-fi writer david brin mourn loss ubiquit basic recent salon articl johnni ca n't code . # # languag # # # syntax basic statement termin line end unless line continu charact . minim basic syntax need let , print , goto command . line number distinct aspect classic home comput basic . due limit static line number , basic interpret later introduc built-in renumb command allow interact program . ( ) modern basic dialect abandon line number altogeth favour line label , support advanc control structur data declar construct avail languag c pascal ( note also version basic use line number implement construct well ) : loop loop switch statement subroutin function recent variant visual basic introduc featur ... loop construct loop collect array vba visual basic 4 later , even object-ori program inherit latest version . memori manag easier mani procedur program languag commonli includ garbag collector . wealth variant show languag user develop commun activ , basic may seen subcultur deal comput program rather fix set syntact rule . appli well `` old '' comput languag like cobol fortran , although basic movement far largest ; may explain larg number profession learn program basic home comput era 1980 . # # # procedur flow control basic use extern librari common oper like languag c. instead , interpret ( compil ) contain extens built-in librari intrins procedur , rather like pascal . procedur includ tool programm need learn program write simpl applic , includ function math , string , consol input/output , graphic file manipul . basic dialect provid built-in structur facil , procedur construct . , programm must write program use gosub statement ad hoc argument transmiss emul structur . done expert , produc poorly-structur unmaintain program , commonli refer spaghetti code . gosub statement branch simpl kind subroutin without ( though sometim ) paramet local variabl . modern version basic microsoft quickbas ad support full subroutin function . basic , like fortran , algol pascal , make distinct procedur return valu ( call function ) procedur ( call subroutin ) . function , larger sens subroutin return valu , latecom basic dialect , mani earli system support definit one-lin mathemat function def fn ( `` defin function '' ) . origin dartmouth basic also support algol-lik function subroutin late 1960 , basic09 variant 1979 . # # # data type basic known good string manipul function . earli dialect alreadi set fundament function ( left $ , mid $ , right $ ) string oper . string often use everyday applic , consider conveni advantag mani languag time introduct . origin dartmouth basic support numer string data type . integ type , leav numer variabl float point . string dynam , could chang length . array number string support , well simpl matrix ( ie , two dimension array ) . everi modern basic dialect least numer string data type . data type usual distinguish sigil , suffix charact ; typic , string identifi end ' $ ' , wherea integ numer usual end ' % ' . dialect , variabl must declar ( use dim statement ) first usag ; dialect requir , option enforc it—typ use direct option explicit , visual basic default turn use option explicit . mani dialect also support addit type 16- 32-bit integ floating-point number . `` polynomi '' , `` complex '' , `` list '' special type design support particular end user ' need . addit , allow user-defin type manner similar pascal `` record '' c `` struct '' . basic dialect beyond primit also support array numer type . , array must pre-declar ( ie , alloc dim statement ) use . support two- higher-dimension array , well array non-numer type , common advanc basic . dim myintarray ( 100 ) integ — version allow : dim myintarray % ( 100 ) dim mystringarray ( 50 ) string — version allow : dim mystringarray $ ( 50 ) depend dialect basic , array 0-base ( ie , first element subscript ' 0 ' ) , other 1-base ( first element subscript ' 1 ' ) . , , command like first exampl defin 101-element array integ element 0 100 , other may defin 100-element array integ element 1 100 , rare , 0 99 . may also possibl set default begin element number 0 1 addit command option base . microsoft basic exampl creat array element number 0 100 . work string , command like second may alloc 50-element array variable-length string , may alloc singl string 50 charact . note also subject base differ mention . non-standard , , less intuit dimens exampl often confus novic ( even advanc ) programm . newer dialect offer specif dimens , dim myintarray ( 10 20 ) integ would 11-element array element number 10 20 . # # # relat , logic oper = equal < = less equal logic negat < > equal > = greater equal logic conjunct < less logic disjunct > greater note lexic distinct assign oper equal oper basic ; singl equal sign use . , howev , method avail programm visibl differ two want : option let keyword allow assign clearli unambigu distinguish use equal oper . exampl : x=7 let y=3 . also note , , oper actual bitwis arithmet oper . also use logic oper , basic dialect repres boolean valu -1 ( true ) 0 ( fals ) . howev , resembl c bitwis arithmet oper & , | ~ respect , c logic oper & & , || ! : exampl , alway evalu argument ( short-circuit oper ) . # # exampl # # # first program new basic programm home comput might start simpl program similar hello world program made famou kernighan ritchi . gener involv simpl use languag 's print statement display messag ( programm 's name ) screen . often infinit loop use fill display messag . # # # classic basic note exampl actual well structur , demonstr use goto statement need necessarili lead unstructur program . 10 input `` name : `` ; u $ 20 print `` hello `` ; u $ 30 rem 40 input `` mani star want : `` ; n 50 $ = `` '' 60 = 1 n 70 $ = $ + `` * '' 80 next 90 print $ 100 rem 110 input `` want star ? `` ; $ 120 len ( $ ) = 0 goto 110 130 $ = left $ ( $ , 1 ) 140 ( $ = `` '' ) ( $ = `` '' ) goto 40 150 print `` goodby `` ; 160 = 1 200 170 print u $ ; `` `` ; 180 next 190 print # # # modern basic '' modern '' structur basic ( exampl , quickbas , freebas , purebas , blitzmax , powerbas , truebas ) support classic command goto statement vari degre , ad mani modern keyword . previou exampl quickbas : input `` name '' ; usernam $ print `` hello `` ; usernam $ input `` mani star want '' ; numstar star $ = `` '' star $ = repeat $ ( `` * '' , numstar ) ' < - ansi basic -- -- star $ = string $ ( numstar , `` * '' ) ' < - ms basic print star $ input `` want star '' ; answer $ loop answer $ < > `` '' answer $ = left $ ( answer $ , 1 ) loop ucas $ ( answer $ ) = `` '' print `` goodby `` ; = 1 200 print usernam $ ; `` `` ; next print comparison , program modern purebas : openconsol ( ) print ( `` name `` ) usernam $ = input ( ) printn ( `` hello `` + usernam $ ) repeat print ( `` mani star want `` ) numstar = val ( input ( ) ) star $ = rset ( `` '' , numstar , `` * '' ) printn ( star $ ) repeat print ( `` want star `` ) answer $ = input ( ) answer $ < > `` '' answer $ = left ( answer $ , 1 ) ucas ( answer $ ) < > `` '' print ( `` goodby `` ) = 1 200 print ( usernam $ + `` `` ) next printn ( `` '' ) closeconsol ( )