central process unit ( cpu ) , sometim simpli processor , compon digit comput interpret instruct process data contain comput program . cpu provid fundament digit comput trait programm , one necessari compon found comput era , along primari storag input/output facil . cpu manufactur use integr circuit known microprocessor . sinc mid-1970 , single-chip microprocessor almost total replac type cpu , today term `` cpu '' usual appli type microprocessor . phrase `` central process unit '' descript certain class logic machin execut complex comput program . broad definit easili appli mani earli comput exist long term `` cpu '' ever came widespread usag . howev , term initi use comput industri least sinc earli 1960 . form , design implement cpu chang dramat sinc earliest exampl , fundament oper remain much . earli cpu custom-design part larger , usual one-of-a-kind , comput . howev , costli method design custom cpu particular applic larg given way develop inexpens standard class processor suit one mani purpos . standard trend gener began era discret transistor mainfram minicomput rapidli acceler popular integr circuit ( ic ) . ic allow increasingli complex cpu design manufactur small space ( order millimet ) . miniatur standard cpu increas presenc digit devic modern life far beyond limit applic dedic comput machin . modern microprocessor appear everyth automobil cell phone child 's toy . # # histori prior advent machin resembl today 's cpu , comput eniac physic rewir order perform differ task . machin often refer `` fixed-program comput , '' sinc physic reconfigur order run differ program . sinc term `` cpu '' gener defin softwar ( comput program ) execut devic , earliest devic could rightli call cpu came advent stored-program comput . idea stored-program comput alreadi present eniac 's design , initi omit machin could finish sooner . june 30 , 1945 , eniac even complet , mathematician john von neumann distribut paper entitl `` first draft report edvac . '' outlin design stored-program comput would eventu complet august 1949 . edvac design perform certain number instruct ( oper ) variou type . instruct could combin creat use program edvac run . significantli , program written edvac store high-spe comput memori rather specifi physic wire comput . overcam sever limit eniac , larg amount time effort took reconfigur comput perform new task . von neumann 's design , program , softwar , edvac ran could chang simpli chang content comput 's memori . note von neumann often credit design stored-program comput design edvac , other konrad zuse suggest similar idea . addit , so-cal harvard architectur harvard mark , complet edvac , also util stored-program design use punch paper tape rather electron memori . key differ von neumann harvard architectur latter separ storag treatment cpu instruct data , former us memori space . modern cpu primarili von neumann design , element harvard architectur commonli seen well . digit devic , cpu deal discret state therefor requir kind switch element differenti chang state . prior commerci accept transistor , electr relay vacuum tube ( thermion valv ) commonli use switch element . although distinct speed advantag earlier , pure mechan design , unreli variou reason . exampl , build direct current sequenti logic circuit relay requir addit hardwar cope problem contact bounc . vacuum tube suffer contact bounc , must heat becom fulli oper eventu stop function altogeth . usual , tube fail , cpu would diagnos locat fail compon could replac . therefor , earli electron ( vacuum tube base ) comput gener faster less reliabl electromechan ( relay base ) comput . tube comput like edvac tend averag eight hour failur , wherea relay comput like ( slower , earlier ) harvard mark fail rare . end , tube base cpu becam domin signific speed advantag afford gener outweigh reliabl problem . earli synchron cpu ran low clock rate compar modern microelectron design ( see discuss clock rate ) . clock signal frequenc rang 100 khz 4 mhz common time , limit larg speed switch devic built . # # # discret transistor ic cpu design complex cpu increas variou technolog facilit build smaller reliabl electron devic . first improv came advent transistor . transistor cpu 1950 1960 longer built bulki , unreli , fragil switch element like vacuum tube electr relay . improv complex reliabl cpu built onto one sever print circuit board contain discret ( individu ) compon . period , method manufactur mani transistor compact space gain popular . integr circuit ( ic ) allow larg number transistor manufactur singl semiconductor -base die , `` chip . '' first basic non-speci digit circuit gate miniatur ic . cpu base upon `` build block '' ic gener refer `` small-scal integr '' ( ssi ) devic . ssi ic , one use apollo guidanc comput , usual contain transistor count number multipl ten . build entir cpu ssi ic requir thousand individu chip , still consum much less space power earlier discret transistor design . microelectron technolog advanc , increas number transistor place ic , thu decreas quantiti individu ic need complet cpu . msi lsi ( medium- large-scal integr ) ic increas transistor count hundr , thousand . 1964 ibm introduc system/360 comput architectur , use seri comput could run program differ speed perform . signific time electron comput incompat one anoth , even made manufactur . facilit improv , ibm util concept microprogram ( often call `` microcod '' ) , still see widespread usag modern cpu . system/360 architectur popular domin mainfram comput market next decad left legaci still continu similar modern comput like ibm zseri . year ( 1964 ) , digit equip corpor ( dec ) introduc anoth influenti comput aim scientif research market , pdp-8 . dec would later introduc extrem popular pdp-11 line origin built ssi ic eventu implement lsi compon becam practic . stark contrast ssi msi predecessor , first lsi implement pdp-11 contain cpu compos four lsi integr circuit . transistor-bas comput sever distinct advantag predecessor . asid facilit increas reliabl lower power consumpt , transistor also allow cpu oper much higher speed short switch time transistor comparison tube relay . thank increas reliabl well dramat increas speed switch element ( almost exclus transistor time ) , cpu clock rate ten megahertz obtain period . addit , discret transistor ic cpu heavi usag , new high-perform design like simd ( singl instruct multipl data ) vector processor began appear . earli experiment design later gave rise era special supercomput like made cray inc. # # # microprocessor introduct microprocessor 1970 significantli affect design implement cpu . sinc introduct first microprocessor ( intel 4004 ) 1970 first wide use microprocessor ( intel 8080 ) 1974 , class cpu almost complet overtaken central process unit implement method . mainfram minicomput manufactur time launch proprietari ic develop program upgrad older comput architectur , eventu produc instruct set compat microprocessor backward-compat older hardwar softwar . combin advent eventu vast success ubiquit person comput , term `` cpu '' appli almost exclus microprocessor . previou gener cpu implement discret compon numer small integr circuit ( ic ) one circuit board . microprocessor , hand , cpu manufactur small number ic ; usual one . overal smaller cpu size result implement singl die mean faster switch time physic factor like decreas gate parasit capacit . allow synchron microprocessor clock rate rang ten megahertz sever gigahertz . addit , abil construct exceedingli small transistor ic increas , complex number transistor singl cpu increas dramat . wide observ trend describ moor 's law , proven fairli accur predictor growth cpu ( ic ) complex date . complex , size , construct , gener form cpu chang drastic past sixti year , notabl basic design function chang much . almost common cpu today accur describ von neumann stored-program machin . aforement moor 's law continu hold true , concern arisen limit integr circuit transistor technolog . extrem miniatur electron gate caus effect phenomenon like electromigr subthreshold leakag becom much signific . newer concern among mani factor caus research investig new method comput quantum comput , well expand usag parallel method extend use classic von neumann model . # # cpu oper fundament oper cpu , regardless physic form take , execut sequenc store instruct call program . discuss devic conform common von neumann architectur . program repres seri number kept kind comput memori . four step nearli von neumann cpu use oper : fetch , decod , execut , writeback . first step , fetch , involv retriev instruct ( repres number sequenc number ) program memori . locat program memori determin program counter ( pc ) , store number identifi current posit program . word , program counter keep track cpu 's place current program . instruct fetch , pc increment length instruct word term memori unit . often instruct fetch must retriev rel slow memori , caus cpu stall wait instruct return . issu larg address modern processor cach pipelin architectur ( see ) . instruct cpu fetch memori use determin cpu . decod step , instruct broken part signific portion cpu . way numer instruct valu interpret defin cpu 's instruct set architectur ( isa ) . often , one group number instruct , call opcod , indic oper perform . remain part number usual provid inform requir instruct , operand addit oper . operand may given constant valu ( call immedi valu ) , place locat valu : regist memori address , determin address mode . older design portion cpu respons instruct decod unchang hardwar devic . howev , abstract complic cpu isa , microprogram often use assist translat instruct variou configur signal cpu . microprogram sometim rewrit modifi chang way cpu decod instruct even manufactur . fetch decod step , execut step perform . step , variou portion cpu connect perform desir oper . , instanc , addit oper request , arithmet logic unit ( alu ) connect set input set output . input provid number ad , output contain final sum . alu contain circuitri perform simpl arithmet logic oper input ( like addit bitwis oper ) . addit oper produc result larg cpu handl , arithmet overflow flag flag regist may also set ( see discuss integ rang ) . final step , writeback , simpli `` write back '' result execut step form memori . often result written intern cpu regist quick access subsequ instruct . case result may written slower , cheaper larger , main memori . type instruct manipul program counter rather directli produc result data . gener call `` jump '' facilit behaviour like loop , condit program execut ( use condit jump ) , function program . mani instruct also chang state digit `` flag '' regist . flag use influenc program behav , sinc often indic outcom variou oper . exampl , one type `` compar '' instruct consid two valu set number flag regist accord one greater . flag could use later jump instruct determin program flow . execut instruct writeback result data , entir process repeat , next instruct cycl normal fetch next-in-sequ instruct increment valu program counter . complet instruct jump , program counter modifi contain address instruct jump , program execut continu normal . complex cpu one describ , multipl instruct fetch , decod , execut simultan . section describ gener refer `` classic risc pipelin , '' fact quit common among simpl cpu use mani electron devic ( often call microcontrol ) . # # design implement # # # integ rang way cpu repres number design choic affect basic way devic function . earli digit comput use electr model common decim ( base ten ) numer system repres number intern . comput use exot numer system like ternari ( base three ) . nearli modern cpu repres number binari form , digit repres two-valu physic quantiti `` high '' `` low '' voltag . relat number represent size precis number cpu repres . case binari cpu , bit refer one signific place number cpu deal . number bit ( numer place ) cpu us repres number often call `` word size '' , `` bit width '' , `` data path width '' , `` integ precis '' deal strictli integ number ( oppos float point ) . number differ architectur , often within differ part cpu . exampl , 8-bit cpu deal rang number repres eight binari digit ( digit two possibl valu ) , , 2 8 256 discret number . effect , integ size set hardwar limit rang integ softwar run cpu util . integ rang also affect number locat memori cpu address ( locat ) . exampl , binari cpu us 32 bit repres memori address , memori address repres one octet ( 8 bit ) , maximum quantiti memori cpu address 2 32 octet , 4 gib . simpl view cpu address space , mani modern design use much complex address method like page order locat memori integ rang would allow flat address space . higher level integ rang requir structur deal addit digit , therefor complex , size , power usag , gener expens . uncommon , therefor , see 4- 8-bit microcontrol use modern applic , even though cpu much higher rang ( 16 , 32 , 64 , even 128-bit ) avail . simpler microcontrol usual cheaper , use less power , therefor dissip less heat , major design consider electron devic . howev , higher-end applic , benefit afford extra rang ( often addit address space ) signific often affect design choic . gain advantag afford lower higher bit length , mani cpu design differ bit width differ portion devic . exampl , ibm system/370 use cpu primarili 32 bit , use 128-bit precis insid float point unit facilit greater accuraci rang float point number . mani later cpu design use similar mix bit width , especi processor meant general-purpos usag reason balanc integ float point capabl requir . # # # clock rate cpu , inde sequenti logic devic , synchron natur . , design oper assumpt synchron signal . signal , known clock signal , usual take form period squar wave . calcul maximum time electr signal move variou branch cpu 's mani circuit , design select appropri period clock signal . period must longer amount time take signal move , propag , worst-cas scenario . set clock period valu well worst-cas propag delay , possibl design entir cpu way move data around `` edg '' rise fall clock signal . advantag simplifi cpu significantli , design perspect component-count perspect . howev , also carri disadvantag entir cpu must wait slowest element , even though portion much faster . limit larg compens variou method increas cpu parallel ( see ) . architectur improv alon solv drawback global synchron cpu , howev . exampl , clock signal subject delay electr signal . higher clock rate increasingli complex cpu make difficult keep clock signal phase ( synchron ) throughout entir unit . led mani modern cpu requir multipl ident clock signal provid order avoid delay singl signal significantli enough caus cpu malfunct . anoth major issu clock rate increas dramat amount heat dissip cpu . constantli chang clock caus mani compon switch regardless whether use time . gener , compon switch us energi element static state . therefor , clock rate increas , heat dissip , caus cpu requir effect cool solut . one method deal switch unneed compon call clock gate , involv turn clock signal unneed compon ( effect disabl ) . howev , often regard difficult implement therefor see common usag outsid low-pow design . anoth method address problem global clock signal remov clock signal altogeth . remov global clock signal make design process consider complex mani way , asynchron ( clockless ) design carri mark advantag power consumpt heat dissip comparison similar synchron design . somewhat uncommon , entir cpu built without util global clock signal . two notabl exampl arm compliant amulet mip r3000 compat minimip . rather total remov clock signal , cpu design allow certain portion devic asynchron , use asynchron alu conjunct superscalar pipelin achiev arithmet perform gain . altogeth clear whether total asynchron design perform compar better level synchron counterpart , evid least excel simpler math oper . , combin excel power consumpt heat dissip properti , make suitabl embed comput . # # # parallel descript basic oper cpu offer previou section describ simplest form cpu take . type cpu , usual refer subscalar , oper execut one instruct one two piec data time . process give rise inher ineffici subscalar cpu . sinc one instruct execut time , entir cpu must wait instruct complet proceed next instruct . result subscalar cpu get `` hung '' instruct take one clock cycl complet execut . even ad second execut unit ( see ) improv perform much ; rather one pathway hung , two pathway hung number unus transistor increas . design , wherein cpu 's execut resourc oper one instruct time , possibl reach scalar perform ( one instruct per clock ) . howev , perform nearli alway subscalar ( less one instruct per cycl ) . attempt achiev scalar better perform result varieti design methodolog caus cpu behav less linearli parallel . refer parallel cpu , two term gener use classifi design techniqu . instruct level parallel ( ilp ) seek increas rate instruct execut within cpu ( , increas util on-di execut resourc ) , thread level parallel ( tlp ) purpos increas number thread ( effect individu program ) cpu execut simultan . methodolog differ way implement , well rel effect afford increas cpu 's perform applic . # # # # ilp : instruct pipelin superscalar architectur one simplest method use accomplish increas parallel begin first step instruct fetch decod prior instruct finish execut . simplest form techniqu known instruct pipelin , util almost modern general-purpos cpu . pipelin allow one instruct execut given time break execut pathway discret stage . separ compar assembl line , instruct made complet stage exit execut pipelin retir . pipelin , howev , introduc possibl situat result previou oper need complet next oper ; condit often term data depend conflict . cope , addit care must taken check sort condit delay portion instruct pipelin occur . natur , accomplish requir addit circuitri , pipelin processor complex subscalar one ( though significantli ) . pipelin processor becom nearli scalar , inhibit pipelin stall ( instruct spend one clock cycl stage ) . improv upon idea instruct pipelin led develop method decreas idl time cpu compon even . design said superscalar includ long instruct pipelin multipl ident execut unit . superscalar pipelin , multipl instruct read pass dispatch , decid whether instruct execut parallel ( simultan ) . dispatch avail execut unit , result abil sever instruct execut simultan . gener , instruct superscalar cpu abl dispatch simultan wait execut unit , instruct complet given cycl . difficulti design superscalar cpu architectur lie creat effect dispatch . dispatch need abl quickli correctli determin whether instruct execut parallel , well dispatch way keep mani execut unit busi possibl . requir instruct pipelin fill often possibl give rise need superscalar architectur signific amount cpu cach . also make hazard-avoid techniqu like branch predict , specul execut , out-of-ord execut crucial maintain high level perform . attempt predict branch ( path ) condit instruct take , cpu minim number time entir pipelin must wait condit instruct complet . specul execut often provid modest perform increas execut portion code may may need condit oper complet . out-of-ord execut somewhat rearrang order instruct execut reduc delay due data depend . case portion cpu superscalar part , part suffer perform penalti due schedul stall . origin intel pentium ( p5 ) two superscalar alu could accept one instruct per clock , fpu could accept one instruct per clock . thu p5 integ superscalar float point superscalar . intel 's successor pentium architectur , p6 , ad superscalar capabl float point featur , therefor afford signific increas float point instruct perform . simpl pipelin superscalar design increas cpu 's ilp allow singl processor complet execut instruct rate surpass one instruct per cycl ( ipc ) . modern cpu design least somewhat superscalar , nearli gener purpos cpu design last decad superscalar . later year emphasi design high-ilp comput move cpu 's hardwar softwar interfac , isa . strategi long instruct word ( vliw ) caus ilp becom impli directli softwar , reduc amount work cpu must perform boost ilp therebi reduc design 's complex . # # # # tlp : simultan thread execut anoth strategi commonli use increas parallel cpu includ abil run multipl thread ( program ) time . gener , high-tlp cpu use much longer high-ilp one . mani design pioneer cray late 1970 1980 concentr tlp primari method enabl enorm ( time ) comput capabl . fact , tlp form multipl thread execut improv use earli 1950 . context singl processor design , two main methodolog use accomplish tlp chip-level multiprocess ( cmp ) simultan multithread ( smt ) . higher level , common build comput multipl total independ cpu arrang like symmetr multiprocess ( smp ) non-uniform memori access ( numa ) . use differ mean , techniqu accomplish goal : increas number thread cpu ( ) run parallel . cmp smp method parallel similar one anoth straightforward . involv littl conceptu util two complet independ cpu . case cmp , multipl processor `` core '' includ packag , sometim integr circuit . smp , hand , includ multipl independ packag . numa somewhat similar smp us nonuniform memori access model . import comput mani cpu processor 's access time memori quickli exhaust smp 's share memori model , result signific delay due cpu wait memori . therefor , numa consid much scalabl model , success allow mani cpu use one comput smp feasibl support . smt differ somewhat tlp improv attempt duplic portion cpu possibl . consid tlp strategi , implement actual resembl superscalar design , inde often use superscalar microprocessor ( ibm 's power5 ) . rather duplic entir cpu , smt design duplic part need instruct fetch , decod , dispatch , well thing like general-purpos regist . allow smt cpu keep execut unit busi often provid instruct two differ softwar thread . , similar ilp superscalar method , simultan execut instruct multipl thread rather execut multipl instruct thread concurr . # # # vector processor simd less common increasingli import paradigm cpu ( inde , comput gener ) deal vector . processor discuss earlier refer type scalar devic . name impli , vector processor deal multipl piec data context one instruct . contrast scalar processor , deal one piec data everi instruct . two scheme deal data gener refer sisd ( singl instruct , singl data ) simd ( singl instruct , multipl data ) , respect . great util creat cpu deal vector data lie optim task tend requir oper ( exampl , sum dot product ) perform larg set data . classic exampl type task multimedia applic ( imag , video , sound ) , well mani type scientif engin task . wherea scalar cpu must complet entir process fetch , decod , execut instruct valu set data , vector cpu perform singl oper compar larg set data one instruct . cours , possibl applic tend requir mani step appli one oper larg set data . earli vector cpu , cray-1 , associ almost exclus scientif research cryptographi applic . howev , multimedia larg shift digit medium , need form simd general-purpos cpu becom signific . shortli float point execut unit start becom commonplac includ general-purpos processor , specif implement simd execut unit also began appear general-purpos cpu . earli simd specif like intel 's mmx integer-onli . prove signific impedi softwar develop , sinc mani applic benefit simd primarili deal float point number . progress , earli design refin remad common , modern simd specif , usual associ one isa . notabl modern exampl intel 's sse powerpc-rel altivec ( also known vmx ) .