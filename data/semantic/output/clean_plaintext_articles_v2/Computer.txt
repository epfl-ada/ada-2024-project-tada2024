comput machin manipul data accord list instruct , program . abil store execut store programs—that , programmability—mak comput extrem versatil distinguish calcul . church–tur thesi mathemat statement versatil : comput certain minimum capabl , principl , capabl perform task comput perform . therefor , comput capabl complex rang person digit assist supercomput abl perform comput task long time storag capac consider . comput take numer physic form . earli electron comput size larg room , consum much power sever hundr modern person comput . today , comput made small enough fit wrist watch power watch batteri . howev , large-scal comput facil still exist special scientif comput transact process requir larg organ . societi come recogn person comput portabl equival , laptop comput , icon inform age ; peopl think `` comput '' . howev , common form comput use today far embed comput . embed comput small , simpl devic often use control devices—for exampl , use control machin fighter aircraft industri robot , digit camera , even child 's toy . # # histori comput question earliest comput difficult one . definit comput chang year therefor imposs definit answer question . mani devic call `` comput '' would longer qualifi today 's standard . origin , term `` comput '' refer person perform numer calcul ( human comput ) , often aid mechan calcul devic . exampl earli mechan comput devic includ abacu , slide rule arguabl astrolab antikythera mechan ( date 87 bc ) . end middl age saw re-invigor european mathemat engin , wilhelm schickard 's 1623 devic first number mechan calcul construct european engin . howev , none devic fit modern definit comput could program . 1801 , joseph mari jacquard made improv textil loom use seri punch paper card templat allow loom weav intric pattern automat . result jacquard loom consid comput , import step use punch card defin woven pattern view earli , albeit limit , form programm . 1837 , charl babbag first conceptu design fulli programm mechan comput call `` analyt engin '' . due limit financ , inabl resist tinker design , babbag never actual built analyt engin . large-scal autom data process punch card perform us censu 1890 tabul machin design herman hollerith manufactur comput tabul record corpor ( ctr ) , later becam ibm . end 19th centuri number technolog would later prove use realiz practic comput begun appear : punch card , boolean algebra , vacuum tube ( thermion valv ) teleprint . first half 20th centuri , mani scientif comput need met increasingli sophist analog comput , use direct mechan electr model problem basi comput . howev , programm gener lack versatil accuraci modern digit comput . success steadili power flexibl comput devic construct 1930 1940 , gradual ad key featur seen modern comput . use digit electron ( larg invent claud shannon 1937 ) flexibl programm vital import step , defin one point along road `` first digit electron comput '' difficult . notabl achiev includ : atanasoff-berri comput ( 1941 ) use vacuum tube base comput , binari number , regen capacitor memori . konrad zuse 's electromechan `` z machin '' . z3 ( 1941 ) first work machin featur binari arithmet measur programm . secret british colossu comput ( 1944 ) , limit programm demonstr devic use thousand tube could reason reliabl electron reprogramm . use break german wartim code . harvard mark ( 1944 ) , large-scal electromechan comput limit programm . us armi 's ballist research laboratori eniac ( 1946 ) , use decim arithmet first gener purpos electron comput , although initi inflex architectur essenti requir rewir chang program . sever develop eniac , recogn flaw , came far flexibl eleg design , came known store program architectur von neumann architectur . design first formal describ john von neumann paper `` first draft report edvac '' , publish 1945 . number project develop comput base store program architectur commenc around time ; first complet great britain . first demonstr work manchest small-scal experiment machin ( ssem ) `` babi '' . howev , edsac , complet year ssem , perhap first practic implement store program design . shortli thereaft , machin origin describ von neumann 's paper— edvac—wa complet n't see full-tim use addit two year . nearli modern comput implement form store program architectur , make singl trait word `` comput '' defin . standard , mani earlier devic would longer call comput today 's definit , usual refer histor context . technolog use comput chang dramat sinc first electron , general-purpos comput 1940 , still use von neumann architectur . design made univers comput practic realiti . vacuum tube-bas comput use throughout 1950 , larg replac 1960 transistor-bas devic , smaller , faster , cheaper , use less power reliabl . factor allow comput produc unpreced commerci scale . 1970 , adopt integr circuit technolog subsequ creation microprocessor intel 4004 caus anoth leap size , speed , cost reliabl . 1980 , comput becom suffici small cheap replac simpl mechan control domest applianc wash machin . around time , comput becam wide access person use individu form home comput ubiquit person comput . conjunct widespread growth internet sinc 1990 , person comput becom common televis telephon almost modern electron devic contain comput kind . # # store program architectur defin featur modern comput distinguish machin program . say list instruct ( program ) given comput store carri time futur . case , comput instruct simpl : add one number anoth , move data one locat anoth , send messag extern devic , etc . instruct read comput 's memori gener carri ( execut ) order given . howev , usual special instruct tell comput jump ahead backward place program carri execut . call `` jump '' instruct ( branch ) . furthermor , jump instruct may made happen condit differ sequenc instruct may use depend result previou calcul extern event . mani comput directli support subroutin provid type jump `` rememb '' locat jump anoth instruct return point . program execut might liken read book . person normal read word line sequenc , may time jump back earlier place text skip section interest . similarli , comput may sometim go back repeat instruct section program intern condit met . call flow control within program allow comput perform task repeatedli without human intervent . compar , person use pocket calcul perform basic arithmet oper ad two number button press . add togeth number 1 1,000 would take thousand button press lot time—with near certainti make mistak . hand , comput may program simpl instruct . exampl : mov # 0 , sum ; set sum 0 mov # 1 , num ; set num 1 loop : add num , sum ; add num sum add # 1 , num ; add 1 num cmp num , # 1000 ; compar num 1000 ble loop ; num < = 1000 , go back 'loop ' halt ; end program . stop run told run program , comput perform repetit addit task without human intervent . almost never make mistak modern pc complet task millionth second . howev , comput `` think '' sens solv problem exactli way program . intellig human face addit task might soon realiz instead actual ad number one simpli use equat arriv correct answer ( 500,500 ) littl work . mani modern comput abl make decis speed execut program `` guess '' outcom certain jump instruct re-arrang order instruct slightli without chang mean ( branch predict , specul execut , out-of-ord execut ) . howev , comput intuit determin effici way perform task given overal understand task , `` big pictur '' , . word , comput program add number one one exampl would exactli without regard effici altern solut . # # # program practic term , comput program might includ anywher dozen instruct mani million instruct someth like word processor web browser . typic modern comput execut billion instruct everi second nearli never make mistak year oper . larg comput program may take team comput programm year write probabl entir program written complet manner intend unlik . error comput program call bug . sometim bug benign affect use program , case might caus program complet fail ( crash ) , yet case may subtl problem . sometim otherwis benign bug may use malici intent , creat secur exploit . bug usual fault comput . sinc comput mere execut instruct given , bug nearli alway result programm error oversight made program 's design . comput , individu instruct store machin code instruct given uniqu number ( oper code opcod short ) . command add two number togeth would one opcod , command multipli would differ opcod . simplest comput abl perform hand differ instruct , complex comput sever hundr choos from—each uniqu numer code . sinc comput 's memori abl store number , also store instruct code . lead import fact entir program ( list instruct ) repres list number manipul insid comput numer data . fundament concept store program comput 's memori alongsid data oper crux von neumann , store program , architectur . case , comput might store program memori kept separ data oper . call harvard architectur harvard mark comput . modern von neumann comput display trait harvard architectur design , cpu cach . possibl write comput program long list number ( machin languag ) techniqu use mani earli comput , extrem tediou practic , especi complic program . instead , basic instruct given short name indic function easi remember—a mnemon add , sub , mult jump . mnemon collect known comput 's assembl languag . convert program written assembl languag someth comput actual understand ( machin languag ) usual done comput program call assembl . machin languag assembl languag repres ( collect term low-level program languag ) tend uniqu particular type comput . mean arm architectur comput ( may found pda hand-held videogam ) understand machin languag intel pentium amd athlon 64 comput might pc . though consider easier machin languag , write long program assembl languag often difficult error prone . therefor , complic program written abstract high-level program languag abl express need comput programm conveni ( therebi help reduc programm error ) . high level languag usual `` compil '' machin languag ( sometim assembl languag machin languag ) use anoth comput program call compil . sinc high level languag abstract assembl languag , possibl use differ compil translat high level languag program machin languag mani differ type comput . part mean softwar like video game may made avail differ comput architectur person comput variou video game consol . # # # exampl suppos comput employ drive traffic light . simpl store program might say : turn light turn red light , wait sixti second turn red light , turn green light , wait sixti second turn green light , turn amber light , wait two second turn amber light jump instruct number ( 2 ) set instruct , comput would cycl light continu red , green , amber back red told stop run program . howev , suppos simpl on/off switch connect comput intend use make light flash red mainten oper perform . program might instruct comput : turn light turn red light , wait sixti second turn red light , turn green light , wait sixti second turn green light , turn amber light , wait two second turn amber light mainten switch turn jump instruct number ( 2 ) turn red light , wait one second turn red light , wait one second jump instruct number ( 6 ) manner , comput either run instruct number ( 2 ) ( 6 ) 's run instruct ( 6 ) ( 9 ) , depend posit switch . # # comput work gener purpos comput four main section : arithmet logic unit ( alu ) , control unit , memori , input output devic ( collect term i/o ) . part interconnect bu , often made group wire . control unit , alu , regist , basic i/o ( often hardwar close link ) collect known central process unit ( cpu ) . earli cpu compris mani separ compon sinc mid-1970 cpu typic construct singl integr circuit call microprocessor . # # # control unit control unit ( often call control system central control ) direct variou compon comput . read interpret ( decod ) instruct program one one . control system decod instruct turn seri control signal oper part comput . control system advanc comput may chang order instruct improv perform . key compon common cpu program counter , special memori cell ( regist ) keep track locat memori next instruct read . control system 's function follows—not simplifi descript step may perform concurr differ order depend type cpu : read code next instruct cell indic program counter . decod numer code instruct set command signal system . increment program counter point next instruct . read whatev data instruct requir cell memori ( perhap input devic ) . locat requir data typic store within instruct code . provid necessari data alu regist . instruct requir alu special hardwar complet , instruct hardwar perform request oper . write result alu back memori locat regist perhap output devic . jump back step ( 1 ) . sinc program counter ( conceptu ) anoth set memori cell , chang calcul done alu . ad 100 program counter would caus next instruct read place 100 locat program . instruct modifi program counter often known `` jump '' allow loop ( instruct repeat comput ) often condit instruct execut ( exampl control flow ) . notic sequenc oper control unit go process instruct like short comput program - inde , complex cpu design , anoth yet smaller comput call microsequenc run microcod program caus event happen . # # # arithmetic/log unit ( alu ) alu capabl perform two class oper : arithmet logic . set arithmet oper particular alu support may limit ad subtract might includ multipli divid , trigonometri function ( sine , cosin , etc ) squar root . oper whole number ( integ ) whilst other use float point repres real numbers—albeit limit precis . howev , comput capabl perform simplest oper program break complex oper simpl step perform . therefor , comput program perform arithmet operation—although take time alu directli support oper . alu may also compar number return boolean truth valu ( true fals ) depend whether one equal , greater less ( `` 64 greater 65 ? '' ) . logic oper involv boolean logic : , , xor . use creat complic condit statement process boolean logic . superscalar comput contain multipl alu process sever instruct time . graphic processor comput simd mimd featur often provid alu perform arithmet vector matrix . # # # memori comput 's memori may view list cell number may place read . cell number `` address '' store singl number . comput may instruct `` put number 123 cell number 1357 '' `` add number cell 1357 number cell 2468 put answer cell 1595 '' . inform store memori may repres practic anyth . letter , number , even comput instruct may place memori equal eas . sinc cpu differenti differ type inform , softwar give signific memori see noth seri number . almost modern comput , memori cell set store binari number group eight bit ( call byte ) . byte abl repres 256 differ number ; either 0 255 -128 +127 . store larger number , sever consecut byte may use ( typic , two , four eight ) . neg number requir , usual store two 's complement notat . arrang possibl , usual seen outsid special applic histor context . comput may store kind inform memori long somehow repres numer form . modern comput billion even trillion byte memori . cpu contain special set memori cell call regist read written much rapidli main memori area . typic two one hundr regist depend type cpu . regist use frequent need data item avoid access main memori everi time data need . sinc data constantli work , reduc need access main memori ( often slow compar alu control unit ) greatli increas comput 's speed . comput main memori come two princip varieti : random access memori ram read-onli memori rom . ram read written anytim cpu command , rom pre-load data softwar never chang , cpu read . rom typic use store comput 's initi start-up instruct . gener , content ram eras power comput turn rom retain data indefinit . pc , rom contain special program call bio orchestr load comput 's oper system hard disk drive ram whenev comput turn reset . embed comput , frequent disk drive , softwar requir perform task may store rom . softwar store rom often call firmwar notion like hardwar softwar . flash memori blur distinct rom ram retain data turn rewrit like ram . howev , flash memori typic much slower convent rom ram use restrict applic high speed requir . sophist comput may one ram cach memori slower regist faster main memori . gener comput sort cach design move frequent need data cach automat , often without need intervent programm 's part . # # # input/output ( i/o ) i/o mean comput receiv inform outsid world send result back . devic provid input output comput call peripher . typic person comput , peripher includ input like keyboard mous , output display printer . hard disk , floppi disk optic disc serv input output . comput network anoth form i/o . practic devic made interfac digit may use i/o . comput engin control unit modern automobil might read posit pedal steer wheel , output oxygen sensor devic monitor speed wheel . output devic includ variou light gaug driver see well engin control spark ignit circuit fuel inject system . digit wristwatch , comput read button caus number symbol shown liquid crystal display . often , i/o devic complex comput right cpu memori . graphic process unit might contain fifti tini comput perform calcul necessari display 3d graphic . modern desktop comput contain mani smaller comput assist main cpu perform i/o . # # # multitask comput may view run one gigant program store main memori , system necessari give appear run sever program simultan . achiev comput switch rapidli run program turn . one mean done special signal call interrupt period caus comput stop execut instruct someth els instead . rememb execut prior interrupt , comput may return task later . sever program run `` time '' , interrupt gener may caus sever hundr interrupt per second , caus program switch time . sinc modern comput typic execut instruct sever order magnitud faster human percept , mani program may seem run time even though one ever execut given instant . method multitask sometim term `` time-shar '' sinc program alloc `` slice '' time turn . era cheap comput , principl use multitask allow mani peopl share comput . seemingli , multitask would caus comput switch sever program run slowli - direct proport number program run . howev , program spend much time wait slow input/output devic complet task . program wait user click mous press key keyboard , take `` time slice '' event wait occur . free time program execut mani program may run time without unaccept speed loss . # # # multiprocess comput may divid work one separ cpu , creat multiprocess configur . tradit , techniqu util larg power comput supercomput , mainfram comput server . howev , multiprocessor multi-cor ( multipl cpu singl integr circuit ) person laptop comput becom wide avail begin see increas usag lower-end market result . supercomput particular often highli uniqu architectur differ significantli basic stored-program architectur gener purpos comput . often featur thousand cpu , custom high-spe interconnect , special comput hardwar . design tend use special task due larg scale program organ requir success util avail resourc . supercomput usual see usag large-scal simul , graphic render , cryptographi applic , well so-cal `` embarrassingli parallel '' task . # # # network internet comput use coordin inform multipl locat sinc 1950 , us militari 's sage system first large-scal exampl system , led number special-purpos commerci system like sabr . 1970 , comput engin research institut throughout us began link comput togeth use telecommun technolog . effort fund arpa ( darpa ) , comput network produc call arpanet . technolog made arpanet possibl spread evolv . time , network spread beyond academ militari institut becam known internet . emerg network involv redefinit natur boundari comput . phrase john gage bill joy ( sun microsystem ) , `` network comput '' . comput oper system applic modifi includ abil defin access resourc comput network , peripher devic , store inform , like , extens resourc individu comput . initi facil avail primarili peopl work high-tech environ , 1990 spread applic like e-mail world wide web , combin develop cheap , fast network technolog like ethernet adsl saw comput network becom ubiquit almost everywher . fact , number comput network grow phenomen . larg proport person comput regularli connect internet commun receiv inform . `` wireless '' network , often util mobil phone network , meant network becom increasingli ubiquit even mobil comput environ . # # topic # # # hardwar term hardwar cover part comput tangibl object . circuit , display , power suppli , cabl , keyboard , printer mous hardwar . # # # softwar softwar refer part comput materi form ; program , data , protocol , etc softwar . softwar store hardwar easili modifi ( bio rom ibm pc compat ) , sometim term firmwar indic fall area uncertainti hardwar softwar . # # # program languag program languag provid variou way specifi program comput run . unlik natur languag , program languag design permit ambigu concis . pure written languag often difficult read aloud . gener either translat machin languag compil assembl run , translat directli run time interpret . sometim program execut hybrid method two techniqu . thousand differ program languages—som intend gener purpos , other use highli special applic . # # # profess organ use comput spread throughout societi , increas number career involv comput . follow theme hardwar , softwar firmwar , brain peopl work industri sometim known irrever wetwar `` meatwar '' . need comput work well togeth abl exchang inform spawn need mani standard organ , club societi formal inform natur .