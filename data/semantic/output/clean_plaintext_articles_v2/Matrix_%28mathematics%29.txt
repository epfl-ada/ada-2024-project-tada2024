mathemat , matrix ( plural matrix ) rectangular tabl number , gener , tabl consist abstract quantiti ad multipli . matric use describ linear equat , keep track coeffici linear transform record data depend two paramet . matric ad , multipli , decompos variou way , make key concept linear algebra matrix theori . articl , entri matrix real complex number unless otherwis note . # # definit notat horizont line matrix call row vertic line call column . matrix row n column call -by- n matrix ( written × n ) n call dimens . dimens matrix alway given number row first , number column . entri matrix lie -th row j -th column call , j entri ( , j ) -th entri . written , j [ , j ] . row alway note first , column . often write defin × n matrix entri matrix [ , j ] call ij 1 ≤ ≤ 1 ≤ j ≤ n . howev , convent index j start 1 univers : program languag start zero , case 0 ≤ ≤ − 1 0 ≤ j ≤ n − 1 . matrix one dimens equal one often call vector , interpret element real coordin space . 1 × n matrix ( one row n column ) call row vector , × 1 matrix ( one column row ) call column vector . # # exampl matrix 4×3 matrix . element [ 2,3 ] 2,3 7 . matrix 1×9 matrix , 9-element row vector . # # ad multipli matrix # # # sum given -by- n matrix b , sum + b -by- n matrix comput ad correspond element ( i.e . ( + b ) [ , j ] = [ , j ] + b [ , j ] ) . exampl : anoth , much less often use notion matrix addit direct sum . # # # scalar multipl given matrix number c , scalar multipl ca comput multipli scalar c everi element ( i.e . ( ca ) [ , j ] = ca [ , j ] ) . exampl : # # # matrix multipl multipl two matrix well-defin number column left matrix number row right matrix . -by- n matrix b n -by- p matrix , matrix product ab -by- p matrix ( row , p column ) given : pair j . exampl : two oper turn set ( , n , r ) -by- n matrix real entri real vector space dimens mn . matrix multipl follow properti : ( ab ) c = ( bc ) k -by- matrix , -by- n matrix b n -by- p matrix c ( `` associ '' ) . ( + b ) c = ac + bc -by- n matrix b n -by- k matrix c ( `` right distribut '' ) . c ( + b ) = ca + cb -by- n matrix b k -by- matrix c ( `` left distribut '' ) . import note commut gener hold ; , given matrix b product defin , gener ab ≠ ba . # # linear transform , rank transpos matric conveni repres linear transform matrix multipl neatli correspond composit map , describ next . properti make power data structur high-level program languag . sequel identifi r n set `` column '' n -by-1 matrix . everi linear map f : r n → r exist uniqu -by- n matrix f ( x ) = ax x r n . say matrix `` repres '' linear map f . k -by- matrix b repres anoth linear map g : r → r k , linear map g f repres ba . follow above-ment associ matrix multipl . gener , linear map n -dimension vector space -dimension vector space repres -by- n matrix , provid base chosen . rank matrix dimens imag linear map repres ; dimens space gener row , also dimens space gener column . transpos -by- n matrix n -by- matrix tr ( also sometim written ) form turn row column column row , i.e . tr [ , j ] = [ j , ] index j . describ linear map respect two base , matrix tr describ transpos linear map respect dual base , see dual space . ( + b ) tr = tr + b tr ( ab ) tr = b tr tr . # # squar matrix relat definit squar matrix matrix number row column . set squar n -by- n matrix , togeth matrix addit matrix multipl ring . unless n = 1 , ring commut . ( n , r ) , ring real squar matrix , real unitari associ algebra . ( n , c ) , ring complex squar matrix , complex associ algebra . unit matrix ident matrix n , element main diagon set 1 element set 0 , satisfi mi n =m n n=n -by- n matrix n -by- k matrix n . exampl , n = 3 : ident matrix ident element ring squar matrix . invert element ring call invert matrix non-singular matrix . n n matrix invert exist matrix b ab = n ( = ba ) . case , b invers matrix , denot −1 . set invert n -by- n matrix form group ( specif lie group ) matrix multipl , gener linear group . λ number v non-zero vector v = λ v , call v eigenvector λ associ eigenvalu . ( eigen mean `` '' german . ) number λ eigenvalu −λ n invert , happen p ( λ ) = 0 . p ( x ) characterist polynomi . polynomi degre n therefor n complex root ( count multipl root accord multipl ) . sens , everi squar matrix n complex eigenvalu . determin squar matrix product n eigenvalu , also defin leibniz formula . invert matrix precis matrix nonzero determin . gaussian elimin algorithm central import : use comput determin , rank invers matrix solv system linear equat . trace squar matrix sum diagon entri , equal sum n eigenvalu . matrix exponenti defin squar matrix , use power seri . # # special type matrix mani area mathemat , matrix certain structur aris . import exampl symmetr matrix element symmetr main diagon ( upper left lower right ) equal , , , j =a j , . skew-symmetr matrix element symmetr main diagon neg , , , j = - j , . skew-symmetr matrix , diagon element zero , , , =0 . hermitian ( self-adjoint ) matrix element symmetr diagon other complex conjug , , , j =a * j , , superscript ' * ' signifi complex conjug . toeplitz matrix common element diagon , , , j =a i+1 , j+1 . stochast matrix squar matrix whose column probabl vector ; use defin markov chain . extens list see list matrix . # # matric abstract algebra start ring r , consid set ( , n , r ) n matrix entri r . addit multipl matrix defin case real complex matrix ( see ) . set ( n , r ) squar n n matrix r ring right , isomorph endomorph ring left r - modul r n . similarli , entri taken semir , matrix addit multipl still defin usual . set squar n × n matrix semir . note fast matrix multipl algorithm strassen algorithm gener appli matrix ring work matrix semir ring . r commut ring , ( n , r ) unitari associ algebra r . also meaning defin determin squar matrix use leibniz formula ; matrix invert determin invert r . statement mention articl real complex matrix remain correct matrix arbitrari field . matric polynomi ring import studi control theori . # # histori studi matrix quit old . latin squar magic squar studi sinc prehistor time . matric long histori applic solv linear equat . leibniz , one two founder calculu , develop theori determin 1693 . cramer develop theori , present cramer 's rule 1750 . carl friedrich gauss wilhelm jordan develop gauss-jordan elimin 1800 . term `` matrix '' first coin 1848 j. j. sylvest . cayley , hamilton , grassmann , frobeniu von neumann among famou mathematician work matrix theori . olga tausski todd ( 1906-1995 ) start use matrix theori investig aerodynam phenomenon call flutter aeroelast , wwii . # # applic # # # transport one given list citi ( destin , node , etc . ) told flight ( road , connect , etc . ) citi citi b , one build squar matrix citi index side matrix . entri , b set 1 connect b ; 0 otherwis . revers connect , go b , also b , = 1 . mani instanc connect b might bidirect , i.e . , b = 1 necessarili impli b , = 1 . multipli matrix one obtain 2 . matrix 2 indic go b via third citi . ( 2 ) , b = 1 , exist one third citi c act layov , , go c c b . ( 2 ) , b = n , n layov . # # # encrypt see matrix encrypt matric use encrypt numer data . encrypt done multipli data matrix key matrix . decrypt done simpli multipli encrypt matrix invers key . # # # comput graphic 4x4 transform matrix commonli use comput graphic . upper left 3x3 portion transform matrix compos new x , , z ax post-transform coordin space .