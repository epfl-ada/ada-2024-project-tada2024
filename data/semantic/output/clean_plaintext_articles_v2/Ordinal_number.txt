commonli , ordin number , ordin short , number use denot posit order sequenc : first , second , third , fourth , etc. , wherea cardin number say `` mani '' : one , two , three , four , etc . ( see name number . ) , describ mathemat mean transfinit ordin number . introduc georg cantor 1897 , accommod infinit sequenc classifi set certain kind order structur . ordin extens natur number differ integ cardin . well-ord total order transfinit induct , transfinit induct extend mathemat induct beyond finit . ordin repres equival class well order order-isomorph equival relationship . ordin taken set smaller ordin . ordin may categor : zero , successor ordin , limit ordin ( variou cofin ) . given class ordin , one identifi α-th member class , i.e . one index ( count ) . class close unbound index function continu never stop . one defin addit , multipl , exponenti ordin , subtract divis . cantor normal form standard way write ordin . mani one associ ordin cardin . larger larger ordin defin , becom difficult describ . ordin natur topolog . # # ordin extend natur number natur number use two purpos : describ size set , describ posit element sequenc . finit world two concept coincid , deal infinit set one distinguish two . notion size lead cardin number , also discov cantor , posit gener ordin number describ . wherea notion cardin number associ set particular structur , ordin intim link special kind set call well-ord ( intim link , fact , mathematician make distinct two concept ) . defin thing briefli , well-ord set total order set ( given two element one defin smaller larger one coher way ) infinit decreas sequenc ( howev , may infinit increas sequenc ) . ordin may use label element given well-ord set ( smallest element label 0 , one 1 , next one 2 , `` '' ) measur `` length '' whole set least ordin label element set . `` length '' call order type set . ordin defin set ordin preced : fact , common definit ordin identifi ordin set ordin preced . exampl , ordin 42 order type ordin less , i.e. , ordin 0 ( smallest ordin ) 41 ( immedi predecessor 42 ) , gener identifi set { 0,1,2 , …,41 } . convers , set ordin downward-closed—mean ordin less ordin set also set—i ( identifi ) ordin . far mention finit ordin , natur number . infinit one well : smallest infinit ordin ω , order type natur number ( finit ordin ) even identifi set natur number ( inde , set natur number well-ordered—a set ordinals—and sinc downward close identifi ordin associ , exactli defin ω ) . perhap clearer intuit ordin form examin first : mention , start natur number , 0 , 1 , 2 , 3 , 4 , 5 , … natur number come first infinit ordin , ω , come ω+1 , ω+2 , ω+3 , . ( exactli addit mean defin later : consid name . ) come ω·2 ( ω+ω ) , ω·2+1 , ω·2+2 , , ω·3 , later ω·4 . set ordin form way ( ω· + n , n natur number ) must ordin associ : ω 2 . , ω 3 , ω 4 , , ω ω , ω ω² , much later ε 0 ( give exampl smallest—countable—ordin ) . go way indefinit far ( `` indefinit far '' exactli ordin good : basic everi time one say `` '' enumer ordin , defin larger ordin ) . # # definit # # # defin well-ord set well-ord set order set everi non-empti subset least element : equival ( least presenc axiom depend choic ) say set total order infinit decreas sequenc , someth perhap easier visual . practic , import well-ord justifi possibl appli transfinit induct , say , essenti , properti pass predecessor element element must true element ( given well-ord set ) . state comput ( comput program game ) well-ord way step follow `` lower '' step , sure comput termin . n't want distinguish two well-ord set differ `` label element '' , formal : pair element first set element second set one element smaller anoth first set , partner first element smaller partner second element second set , vice versa . one-to-on correspond call order isomorph two well-ord set said order-isomorph , similar ( obvious equival relat ) . provid exist order isomorph two well-ord set , order isomorph uniqu : make quit justifi consid set essenti ident , seek `` canon '' repres isomorph type ( class ) . exactli ordin provid , also provid canon label element well-ord set . essenti wish defin ordin isomorph class well-ord set : , equival class equival relat `` order-isomorph '' . technic difficulti involv , howev , fact equival class larg set usual zermelo–fraenkel ( zf ) formal set theori . seriou difficulti . say ordin order type set class . # # # definit ordin equival class origin definit ordin number , found exampl principia mathematica , defin order type well-ord set well-ord similar ( order-isomorph ) well-ord : word , ordin number genuin equival class well-ord set . definit must abandon zf relat system axiomat set theori equival class larg form set . howev , definit still use type theori quin 's set theori new foundat relat system ( afford rather surpris altern solut burali-forti paradox largest ordin ) . # # # von neumann definit ordin rather defin ordin equival class well-ord set , tri defin particular well-ord set ( canon ) repres class . thu , want construct ordin number special well-ord set way everi well-ord set order-isomorph one one ordin number . ingeni definit suggest john von neumann , taken standard , : defin ordin special well-ord set , name ordin . formal : set ordin total order respect set contain everi element also subset . ( , `` set contain '' anoth name subset relationship . ) set automat well-ord respect set contain . reli axiom well foundat : everi nonempti set b element b disjoint b . note natur number ordin definit . instanc , 2 element 4 = { 0 , 1 , 2 , 3 } , 2 equal { 0 , 1 } subset { 0 , 1 , 2 , 3 } . shown transfinit induct everi well-ord set order-isomorph exactli one ordin . furthermor , element everi ordin ordin . whenev two ordin , element proper subset , moreov , either element , element , equal . everi set ordin total order . fact , much true : everi set ordin well-ord . import result gener fact everi set natur number well-ord allow u use transfinit induct liber ordin . anoth consequ everi ordin set element precis ordin smaller . statement complet determin set-theoret structur everi ordin term ordin . use prove mani use result ordin . one exampl import character order relat ordin : everi set ordin supremum , ordin obtain take union ordin set . anoth exampl fact collect ordin set . inde , sinc everi ordin contain ordin , follow everi member collect ordin also subset . thu , collect set , would ordin definit ; would member , contradict axiom regular . ( see also burali-forti paradox ) . class ordin various call `` ord '' , `` '' , `` ∞ '' . ordin finit opposit order also well-ord , case subset greatest element . # # # definit modern formul definit ordin . essenti equival definit given . one definit follow . class call transit element x subset , i.e . . ordin defin transit set whose member also transit . follow member ordin . note axiom regular ( foundat ) use show ordin well order contain ( subset ) . # # transfinit induct # # # transfinit induct ? transfinit induct hold well-ord set , import relat ordin worth restat . properti pass set ordin smaller given ordin α α , true ordin . , p ( α ) true whenev p ( β ) true β < α , p ( α ) true α . , practic : order prove properti p ordin α , one assum alreadi known smaller β < α . # # # transfinit recurs transfinit induct use prove thing , also defin ( definit normal said follow transfinit recurs - use transfinit induct prove result well-defin ) : formal statement tediou write , bottom line , order defin ( class ) function ordin α , one assum alreadi defin smaller β < α . one prof transfinit induct one one function satisfi recurs formula includ α . exampl definit transfinit induct ordin ( given later ) : defin function f let f ( α ) smallest ordin set f ( β ) β < α . note assum f ( β ) known process defin f : appar paradox exactli definit transfinit induct permit . fact f ( 0 ) make sens sinc β < 0 , set f ( β ) β < 0 empti , f ( 0 ) must 0 ( smallest ordin ) , know f ( 0 ) , f ( 1 ) make sens ( smallest ordin equal f ( 0 ) =0 ) , ( exactli transfinit induct ) . well , turn exampl interest sinc f ( α ) = α ordin α : shown , precis , transfinit induct . # # # successor limit ordin nonzero ordin smallest element , wit zero . may may largest element . exampl , 42 largest element 41 ω+6 largest element ω+5 . hand , ω largest element sinc largest natur number . ordin largest element α , next ordin α , call successor ordin , name successor α , written α+1 . von neumann definit ordin , successor α sinc element α α . nonzero ordin successor call limit ordin . one justif term limit ordin inde limit topolog sens smaller ordin ( order topolog ) . sequenc ordin index limit γ sequenc increas , i.e . whenev defin limit least upper bound set , smallest ordin ( alway exist ) greater term sequenc . sens , limit ordin limit smaller ordin ( index ) . anoth way defin limit ordin say α limit ordin : ordin less α whenev ζ ordin less α , exist ordin ξ ζ < ξ < α . follow sequenc 0 , 1 , 2 , ... , ω , ω+1 ω limit ordin ordin ( exampl , natur number ) find anoth ordin ( natur number ) larger , still less ω . thu , everi ordin either zero , successor ( well-defin predecessor ) , limit . distinct import , mani definit transfinit induct reli upon . often , defin function f transfinit induct ordin , one defin f ( 0 ) , f ( α+1 ) assum f ( α ) defin , , limit ordin δ one defin f ( δ ) limit f ( β ) β < δ ( either sens ordin limit , explain , notion limit f take ordin valu ) . thu , interest step definit successor step , limit ordin . function ( especi f nondecreas take ordin valu ) call continu . see ordin addit , multipl exponenti continu function second argument . # # # index class ordin mention well-ord set similar ( order-isomorph ) uniqu ordin number α , , word , element index increas fashion ordin less α . appli , particular , set ordin : set ordin natur index ordin less α . hold , slight modif , class ordin ( collect ordin , possibl larg form set , defin properti ) : class ordin index ordin ( , class unbound , put class-biject class ordin ) . freeli speak γ -th element class ( convent “ 0-th ” smallest , “ 1-th ” next smallest , ) . formal , definit transfinit induct : γ -th element class defin ( provid alreadi defin β < γ ) , smallest element greater β -th element β < γ . appli , exampl , class limit ordin : γ -th ordin either limit zero ( see ordin arithmet definit multipl ordin ) . similarli , consid ordin addit indecompos ( mean nonzero ordin sum two strictli smaller ordin ) : γ -th addit indecompos ordin index ω γ . techniqu index class ordin often use context fix point : exampl , γ -th ordin α ω α = α written . call `` epsilon number '' . # # # close unbound set class class ordin said unbound , cofin , given ordin , alway element class greater ( class must proper class , i.e. , set ) . said close limit sequenc ordin class class : , equival , index ( class- ) function f continu sens , δ limit ordin , f ( δ ) ( δ -th ordin class ) limit f ( γ ) γ < δ ; also close , topolog sens , order topolog ( avoid talk topolog proper class , one demand intersect class given ordin close order topolog ordin , equival ) . particular import class ordin close unbound , sometim call club . exampl , class limit ordin close unbound : translat fact alway limit ordin greater given ordin , limit limit ordin limit ordin ( fortun fact terminolog make sens ! ) . class addit indecompos ordin , class ordin , class cardin , close unbound ; set regular cardin , howev , unbound close , finit set ordin close unbound . class stationari nonempti intersect everi close unbound class . superclass close unbound class stationari stationari class unbound , stationari class close stationari class close unbound subclass ( class limit ordin countabl cofin ) . sinc intersect two close unbound class close unbound , intersect stationari class close unbound class stationari . intersect two stationari class may empti , e.g . class ordin cofin ω class ordin uncount cofin . rather formul definit ( proper ) class ordin , formul set ordin given ordin α : subset limit ordin α said unbound ( cofin ) α provid ordin less α less ordin set . gener , call subset ordin α cofin α provid everi ordin less α less equal ordin set . subset said close α provid close order topolog α , i.e . limit ordin set either set equal α . # # arithmet ordin three usual oper ordin : addit , multipl , ( ordin ) exponenti . defin essenti two differ way : either construct explicit well-ord set repres oper use transfinit recurs . cantor normal form provid standard way write ordin . so-cal `` natur '' arithmet oper retain commut expens continu . # # ordin cardin # # # initi ordin cardin ordin associ cardin , cardin , obtain simpli forget order . well-ord set ordin order-typ cardin . smallest ordin given cardin cardin call initi ordin cardin . everi finit ordin ( natur number ) initi , infinit ordin initi . axiom choic equival statement everi set well-ord , i.e . everi cardin initi ordin . case , tradit identifi cardin number initi ordin , say initi ordin cardin . α-th infinit initi ordin written ω α . cardin written . exampl , cardin ω 0 = ω , also cardin ω² ε 0 ( countabl ordin ) . ( assum axiom choic ) identifi ω , except notat use write cardin , ω write ordin ( import sinc wherea ω 2 > ω ) . also , ω 1 smallest uncount ordin ( see exist , consid set equival class well-ord natur number : well-ord defin countabl ordin , ω 1 order type set ) , ω 2 smallest ordin whose cardin greater , , ω ω limit ω n natur number n ( limit cardin cardin , limit inde first cardin ω n ) . # # # cofin cofin ordin α smallest ordin δ order type cofin subset α . notic number author defin confin use limit ordin . cofin set ordin well order set cofin order type set . thu limit ordin , exist δ -index strictli increas sequenc limit α . exampl , cofin ω² ω , sequenc ω· ( rang natur number ) tend ω² ; , gener , countabl limit ordin cofin ω . uncount limit ordin may either cofin ω ω ω uncount cofin . cofin 0 0 . cofin successor ordin 1 . cofin limit ordin least ω . ordin equal cofin call regular alway initi ordin . limit regular ordin limit initi ordin thu also initi even regular usual . axiom choic , ω α + 1 regular α . case , ordin 0 , 1 , ω , ω 1 , ω 2 regular , wherea 2 , 3 , ω ω , ω ω·2 initi ordin regular . cofin ordin α regular ordin , i.e . cofin cofin α cofin α . cofin oper idempot . # # “ larg ” countabl ordin alreadi mention ( see cantor normal form ) ordin ε 0 , smallest satisfi equat ω α = α , limit sequenc 0 , 1 , ω , ω ω , , etc . mani ordin defin manner fix point certain ordin function ( ι -th ordin ω α = α call , could go tri find ι -th ordin , “ ” , subtleti lie “ ” ) . tri systemat , matter system use defin construct ordin , alway ordin lie ordin construct system . perhap import ordin limit manner system construct church- kleen ordin , ( despit ω 1 name , ordin countabl ) , smallest ordin way repres comput function ( made rigor , cours ) . consider larg ordin defin , howev , measur “ proof-theoret strength ” certain formal system ( exampl , measur strength peano arithmet ) . larg ordin also defin church-kleen ordin , interest variou part logic . # # topolog ordin ordin made topolog space natur way endow order topolog . see order topolog # topolog ordin .