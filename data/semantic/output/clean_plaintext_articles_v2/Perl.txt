perl dynam program languag design larri wall first releas 1987 . perl borrow featur varieti languag includ c , shell script ( sh ) , awk , sed lisp . structur , perl base brace-delimit block style awk c , wide adopt strength string process , lack arbitrari limit mani script languag time . # # histori wall began work perl 1987 , work programm unisi , releas version 1.0 comp.sources.misc newsgroup decemb 18 , 1987 . languag expand rapidli next year . perl 2 , releas 1988 , featur better regular express engin . perl 3 , releas 1989 , ad support binari data . 1991 , document perl singl ( increasingli lengthi ) man page . 1991 , program perl ( camel book ) publish , becam de facto refer languag . time , perl version number bump 4 , mark major chang languag , identifi version document book . perl 4 went seri mainten releas , culmin perl 4.036 1993 . point , larri wall abandon perl 4 begin work perl 5 . perl 4 remain version 4.036 day . develop perl 5 continu 1994 . perl5-port mail list establish may 1994 coordin work port perl 5 differ platform . remain primari forum develop , mainten , port perl 5 . perl 5 releas octob 17 , 1994 . nearli complet rewrit interpret , ad mani new featur languag , includ object , refer , packag , modul . importantli , modul provid mechan extend languag without modifi interpret . allow core interpret stabil , even enabl ordinari perl programm add new languag featur . octob 26 , 1995 , comprehens perl archiv network ( cpan ) establish . cpan collect web site archiv distribut perl sourc , binari distribut , document , script , modul . 2006 , perl 5 still activ maintain . import featur essenti new languag construct ad along way , includ unicod support , thread , improv support object orient program mani enhanc . latest stabl releas perl 5.8.8 . # # # name perl origin name `` pearl '' , parabl pearl . larri wall want give languag short name posit connot ; claim look ( reject ) everi three- four-lett word dictionari . also consid name wife gloria . wall discov exist pearl program languag perl 's offici releas chang spell name . name normal capit ( perl ) refer languag uncapit ( perl ) refer interpret program sinc unix-lik file system case sensit . releas first edit program perl common refer languag perl ; randal l. schwartz , howev , capitalis languag 's name book make stand better typeset . case distinct subsequ adopt commun . name occasion given `` perl '' ( p ractic e xtraction r eport l anguag ) . although expans prevail mani today 's manual , includ offici perl man page , backronym offici name stand noth . spell perl cap therefor use shibboleth detect commun outsid . sever backronym suggest , includ humor patholog eclect rubbish lister . # # # camel symbol perl gener symbol camel , result pictur chosen publish o'reilli media cover program perl , consequ acquir name camel book . o'reilli own symbol trademark , claim use legal right protect `` integr impact symbol '' . o'reilli allow non-commerci use symbol , provid program republ perl logo ( see ) power perl button . # # overview perl general-purpos program languag origin develop text manipul use wide rang task includ system administr , web develop , network program , gui develop , . languag intend practic ( easi use , effici , complet ) rather beauti ( tini , eleg , minim ) . major featur includ support multipl program paradigm ( procedur , object-ori , function style ) , automat memori manag , built-in support text process , larg collect third-parti modul . # # # featur overal structur perl deriv broadli c. perl procedur natur , variabl , express , assign statement , brace-delimit code block , control structur , subroutin . perl also take featur shell program . variabl mark lead sigil , unambigu identifi data type ( scalar , array , hash , etc . ) variabl context . importantli , sigil allow variabl interpol directli string . like unix shell , perl mani built-in function common task , like sort , access system facil . perl take list lisp , associ array ( hash ) awk , regular express sed . simplifi facilit mani pars , text handl , data manag task . perl 5 , featur ad support complex data structur , first-class function ( i.e . closur valu ) , object-ori program model . includ refer , packag , class-bas method dispatch , lexic scope variabl , along compil direct ( exampl , strict pragma ) . major addit featur introduc perl 5 abil packag code reusabl modul . larri wall later state `` whole intent perl 5 's modul system encourag growth perl cultur rather perl core . '' version perl automat data type memori manag . interpret know type storag requir everi data object program ; alloc free storag necessari . legal type convers done automat run time ; illeg type convers fatal error . # # # design design perl understood respons three broad trend comput industri : fall hardwar cost , rise labor cost , improv compil technolog . mani earlier comput languag , fortran c , design make effici use expens comput hardwar . contrast , perl design make effici use expens comput programm . perl mani featur eas programm 's task expens greater cpu memori requir . includ automat memori manag ; dynam type ; string , list , hash ; regular express ; introspect eval ( ) function . wall train linguist , design perl much inform linguist principl . exampl includ huffman code ( common construct short ) , good end-weight ( import inform come first ) , larg collect languag primit . perl favor languag construct natur human read write , even complic perl interpret . perl syntax reflect idea `` thing differ look differ '' . exampl , scalar , array , hash differ lead sigil . array index hash key use differ kind brace . string regular express differ standard delimit . approach contrast languag like lisp , s-express construct basic syntax use mani differ purpos . perl enforc particular program paradigm ( procedur , object-ori , function , etc . ) , even requir programm choos among . broad practic bent perl languag commun cultur surround . prefac program perl begin , `` perl languag get job done . '' one consequ perl tidi languag . includ featur peopl use , toler except rule , employ heurist resolv syntact ambigu . forgiv natur compil , bug hard find sometim . discuss variant behaviour built-in function list scalar context , perlfunc ( 1 ) manual page say `` gener , want , unless want consist . '' perl sever motto convey aspect design use . one `` 's one way . '' ( tmtowtdi , usual pronounc 'tim toadi ' ) . other `` perl : swiss armi chainsaw program languag '' `` unnecessari limit '' . state design goal perl make easi task easi difficult task possibl . perl also call `` duct tape internet '' . # # # applic perl mani vari applic , compound avail mani standard third-parti modul . perl use sinc earli day web write cgi script . known one `` three ps '' ( perl , python php ) , popular script languag gener web applic , integr compon popular lamp solut stack web develop . larg project written perl includ slash , imdb usemodwiki , earli , influenti wiki engin . mani high-traff websit , amazon.com ticketmaster.com use perl extens . perl often use glue languag , tie togeth system interfac specif design interoper , `` data mung '' , convert process larg amount data task like creat report . fact , strength intim link . combin make perl popular all-purpos tool system administr , particularli short program enter run singl command line . perl also wide use financ bioinformat , valu rapid applic develop deploy , abil handl larg data set . # # # implement perl implement core interpret , written c , togeth larg collect modul , written perl c. sourc distribut , 2005 , 12 mb packag tar file compress . interpret 150,000 line c code compil 1 mb execut typic machin architectur . altern , interpret compil link librari embed program . nearli 500 modul distribut , compris 200,000 line perl addit 350,000 line c code . much c code modul consist charact encod tabl . interpret object-ori architectur . element perl language—scalar , array , hash , coderef , file handles—ar repres interpret c struct . oper struct defin larg collect macro , typedef function ; constitut perl c api . perl api bewild uniniti , entri point follow consist name scheme , provid guidanc use . execut perl program divid broadli two phase : compile-tim run-tim . compil time , interpret pars program text syntax tree . run time , execut program walk tree . text pars , syntax tree subject optim execut , execut phase rel effici . compile-tim optim syntax tree includ constant fold context propag , peephol optim also perform . howev , compile-tim run-tim phase may nest : begin code block execut compile-tim , eval function initi compil runtim . oper implicit number other - notabl , use claus load librari , known perl modul , impli begin block . perl dynam languag context-sensit grammar affect code execut intermitt run-tim phase . ( see exampl . ) therefor perl pars straight lex/ yacc lexer/pars combin . instead , interpret implement lexer , coordin modifi gnu bison parser resolv ambigu languag . said `` perl pars perl '' , mean perl interpret ( perl ) pars perl languag ( perl ) . truth attest persist imperfect program undertak pars perl , sourc code analyz auto-indent , contend mani way express unambigu syntact construct , also fact perl pars gener case without execut . mainten perl interpret becom increasingli difficult year . code base continu develop sinc 1994 . code optim perform expens simplic , clariti , strong intern interfac . new featur ad , yet virtual complet backward compat earlier version maintain . size complex interpret barrier develop wish work . perl distribut 120,000 function test . run part normal build process , extens exercis interpret core modul . perl develop reli function test ensur chang interpret introduc bug ; convers , perl user see interpret pa function test system high degre confid work properli . written specif standard perl languag , plan creat one current version perl . ever one implement interpret . interpret , togeth function test , stand de facto specif languag . # # # avail perl free softwar , licens artist licens gnu gener public licens . distribut avail oper system . particularli preval unix unix-lik system , port modern ( mani obsolet ) platform . six report except , perl compil sourc code unix-lik , posix-compli otherwis unix-compat platform . howev , rare necessari , perl includ default instal mani popular oper system . special chang requir support mac os classic , special port call macperl ship independ . # # # # window user microsoft window typic instal nativ binari distribut perl . compil perl sourc code window possibl , instal lack requisit c compil . cygwin emul layer provid anoth way run perl window . cygwin provid unix-lik environ window includ gcc , compil perl sourc access option user take approach . june 2006 , win32.perl.org launch adam kennedi behalf perl foundat . commun websit `` thing window perl . '' # # languag structur perl , canon hello world program ocassion state : # ! /usr/bin/perl -w use strict ; print `` hello , world ! \n '' ; # `` \n '' 'newlin ' first line shebang , tell oper system find perl interpret . second line introduc strict pragma use mani larg softwar project qualiti control . third print string hello , world ! newlin . comment ( '\n ' 'newlin ' ) follow . # sign third line 'comment token ' , allow perl interpret ignor everyth # sign , end line code . shebang usual way invok interpret unix system . window system may reli shebang , may associ .pl file extens perl interpret . text editor also use shebang line hint mode oper . program execut perl invok via shell , line start shebang pars option , otherwis ignor . detail see perlrun manpag . note , perl `` hello world '' program requir variabl , subroutin anyth els would even potenti violat strict pragma without caus fatal error without use strict , use strict restrict requir `` hello world '' program , reason use strict avoid potenti yell programm use strict . , 's perfectli possibl invok perl interpret directli command line , addit 'shebang ' line part perl requir shell ( treat comment perl ) , shebang line also actual necessari . inde , win32 implement 's complet useless . final , need explanatori comment insid demonstr `` hello world '' program . addit , final line block code perl program , includ impli block around entir script , actual need semicolon termin . thu , realiti , perl , canon hello world program print `` hello , world ! \n '' 's . # # # data type perl four fundament data type : scalar , list , hash filehandl : scalar singl valu ; may number , string refer list order collect scalar ( variabl hold list call array ) hash , associ array , map string scalar ; string call key scalar call valu . filehandl map file , devic , pipe open read , write , . variabl mark lead sigil , identifi data type access ( type variabl ) , except filehandl , n't . name may use variabl differ type , without conflict . $ foo # scalar @ foo # array % foo # hash foo # filehandl , nice programm use foo , foo . number written usual way ; string enclos quot variou kind . $ n = 42 ; $ name = `` joe '' ; $ colour = 'red ' ; $ anim = qq ! frog ! ; perl convert string number vice versa depend context use . follow exampl string $ n $ treat number argument addit oper . code print number ' 5 ' , discard non number inform oper , although variabl valu remain . ( string concaten oper + , . ) $ n = `` 3 appl '' ; $ = `` 2 orang '' ; print $ n + $ ; perl also boolean context us evalu condit statement . follow valu evalu fals perl : $ fals = 0 ; # number zero $ fals = 0.0 ; # number zero float $ fals = ' 0 ' ; # string zero $ fals = `` '' ; # empti string $ fals = undef ; # return valu undef valu evalu true . includ odd self-describ string `` 0 true '' , fact 0 number , true use boolean . ( non-numer string would also properti , particular string ignor perl respect numer warn . ) less explicit conceptu portabl version string '0e0 ' '0e0 ' , reli charact evalu 0 , '0e0 ' liter `` zero expon zero . '' evalu boolean express also return scalar valu . although document promis particular true fals return ( thu reli ) , mani boolean oper return 1 true empty-str fals ( evalu zero numer context ) . defin ( ) function tell variabl valu set . exampl defin ( $ fals ) true everi valu except undef . specif 1 0 result ( c ) need , explicit convers thought author requir : $ real_result = $ boolean_result ? 1 : 0 ; howev , implicit convers use instead : $ real_result = $ boolean_result + 0 ; list written list element , separ comma , enclos parenthesi requir oper preced . @ score = ( 32 , 45 , 16 , 5 ) ; , , written half dozen way , least : @ score = qw ( 32 45 16 5 ) ; @ score = split /-/ , '32-45-16-5 ' ; push @ score , $ _ 32 , 45 , 16 , 5 ; hash may initi list key/valu pair . % favorit = ( joe = > 'red ' , sam = > 'blue ' ) ; may simpli defin piec piec : $ favourit { joe } = 'red ' ; $ favourit { sam } = 'blue ' ; individu element list access provid numer index , squar bracket . individu valu hash access provid correspond key , curli brace . $ sigil identifi access element scalar . $ score [ 2 ] # element @ score $ favorit { joe } # valu % favorit multipl element may access use @ sigil instead ( identifi result list ) . @ score [ 2 , 3 , 1 ] # three element @ score @ favorit { 'joe ' , 'sam ' } # two valu % favorit number element array obtain evalu array scalar context help $ # sigil . latter give index last element array , number element . $ count = @ friend ; $ # friend # index last element @ friend $ # friends+1 # usual number element @ friend # one $ # friend first element # index 0 , 1 . unless programm reset # differ valu , perl manual encourag # . function oper entir hash . @ name = key % address ; @ address = valu % address ; 1 ( $ name , $ address ) = % address ; # # # control structur perl sever kind control structur . block-ori control structur , similar c java program languag . condit surround parenthesi , control block surround brace : label ( cond ) { ... } label ( cond ) { ... } continu { ... } label ( init-expr ; cond-expr ; incr-expr ) { ... } label foreach var ( list ) { ... } label foreach var ( list ) { ... } continu { ... } ( cond ) { ... } ( cond ) { ... } els { ... } ( cond ) { ... } elsif ( cond ) { ... } els { ... } singl statement control , statement modifi provid lighter syntax : statement cond ; statement unless cond ; statement cond ; statement cond ; statement foreach list ; short-circuit logic oper commonli use effect control flow express level : expr expr expr expr flow control keyword next , last , return , redo express , use short-circuit oper . perl also two implicit loop construct : result = grep { ... } list result = map { ... } list grep return element list control block evalu true . map evalu control block element list return list result valu . construct enabl simpl function program style . switch statement ( multi-way branch ) perl 5 . perl document describ half-dozen way achiev effect use control structur . switch modul , howev , provid function model forthcom perl 6 re-design . perl includ goto label statement , rare use . situat goto call languag n't occur often perl due breadth flow control option . also goto & sub statement perform tail call . termin current subroutin immedi call specifi sub . use situat caller perform effici stack manag perl ( typic chang current stack requir ) , deep recurs tail call substanti posit impact perform avoid overhead scope/stack manag return . # # # subroutin subroutin defin sub keyword , invok simpli name . subroutin question yet declar , parenthesi requir proper pars . foo ( ) ; # parenthesi requir ... sub foo { ... } foo ; # ... list argument may provid subroutin name . argument may scalar , list , hash . foo $ x , @ , % z ; paramet subroutin need declar either number type ; fact , may vari call call . array expand element , hash expand list key/valu pair , whole lot pass subroutin one undifferenti list scalar . whatev argument pass avail subroutin special array @ _ . element @ _ alias actual argument ; chang element @ _ chang correspond argument . element @ _ may access subscript usual way . $ _ [ 0 ] , $ _ [ 1 ] howev , result code difficult read , paramet pass-by-refer semant , may undesir . one common idiom assign @ _ list name variabl . ( $ x , $ , $ z ) = @ _ ; effect mnemon paramet name pass-by-valu semant . keyword indic follow variabl lexic scope contain block . anoth idiom shift paramet @ _ . especi common subroutin take one argument . $ x = shift ; subroutin may return valu . return 42 , $ x , @ , % z ; subroutin exit via return statement , return last express evalu within subroutin bodi . array hash return valu expand list scalar , argument . return express evalu call context subroutin ; surpris unwari . sub list { ( 4 , 5 , 6 ) } sub array { @ x = ( 4 , 5 , 6 ) ; @ x } $ x = list ; # return 6 - last element list $ x = array ; # return 3 - number element list @ x = list ; # return ( 4 , 5 , 6 ) @ x = array ; # return ( 4 , 5 , 6 ) subroutin discov call context wantarray function . sub either { wantarray ? ( 1 , 2 ) : `` orang '' } $ x = either ; # return `` orang '' @ x = either ; # return ( 1 , 2 ) # # # regular express perl languag includ special syntax write regular express ( re ) , interpret contain engin match string regular express . regular express engin us backtrack algorithm , extend capabl simpl pattern match string captur substitut . regular express engin deriv regex written henri spencer . perl regular express syntax origin taken unix version 8 regular express . howev , diverg first releas perl , sinc grown includ mani featur . languag applic adopt perl compat regular express posix regular express includ php , rubi , java , apach http server . m// ( match ) oper introduc regular express match . ( lead may omit breviti . ) simplest case , express like $ x =~ m/abc/ evalu true string $ x match regular express abc . portion regular express may enclos parenthesi ; correspond portion match string captur . captur string assign sequenti built-in variabl $ 1 , $ 2 , $ 3 , ... , list captur string return valu match . $ x =~ m/a ( . ) c/ ; # captur charact ' ' ' c ' s/// ( substitut ) oper specifi search replac oper : $ x =~ s/abc/abc/ ; # upcas b perl regular express take modifi . single-lett suffix modifi mean express : $ x =~ m/abc/i ; # case-insensit pattern match $ x =~ s/abc/abc/g ; # global search replac regular express dens cryptic . regular express syntax extrem compact , gener use singl charact charact pair repres oper . perl provid relief problem /x modifi , allow programm place whitespac comment insid regular express : $ x =~ m/a # match ' ' . # match charact c # match ' c ' /x ; one common use regular express specifi delimit split oper : @ word = split m/ , / , $ line ; # divid $ line comma-separ valu split oper complement string captur . string captur return part string match regular express ; split return part n't match . # # # databas interfac perl wide favor databas applic . text handl facil good gener sql queri ; array , hash automat memori manag make easi collect process return data . earli version perl , databas interfac creat relink interpret client-sid databas librari . somewhat clumsi ; particular problem result perl execut restrict use one databas interfac link . also , relink interpret suffici difficult done import wide use databas . perl 5 , databas interfac implement perl dbi modul . dbi ( databas interfac ) modul present singl , database-independ interfac perl applic , dbd : : ( databas driver ) modul handl detail access 50 differ databas . dbd : : driver ansi sql databas . # # compar perform `` comput languag shootout benchmark '' compar perform implement typic program problem sever program languag . perl implement typic took memori implement languag , vari speed result . perl 's perform shootout similar interpret languag python , php rubi , slower compil languag . perl slower languag thing compil sourc everi time run . `` time start '' , jean-loui leroy found perl script took much longer run expect perl interpret spent much time find compil modul . sinc perl programm know save intermedi result java , python , rubi easili , perl script pay overhead penalti everi execut . overhead problem amort long run phase , significantli skew measur short execut time often found benchmark . perl start run phase , howev , quit fast typic outperform dynam languag . technolog mod_perl overcom hold compil program memori multipl run , class : :autous delay compil part program need . # # # optim nichola clark , perl core develop , discuss perl design trade-off solut `` perl quit fast enough '' . critic routin perl program written languag c assembl via xs inlin . optim perl requir intim knowledg work rather skill languag syntax , mean problem implement perl rather languag . perl 6 , next major version , address lesson languag alreadi learn . # # futur 2000 perl confer , jon orwant made case major new languag initi . led decis begin work redesign languag , call perl 6 . propos new languag featur solicit perl commun larg , 300 rfc submit . larri wall spent next year digest rfc synthes coher framework perl 6 . present design perl 6 seri document call apocalyps , number correspond chapter program perl ( `` camel book '' ) . current , unfin specif perl 6 encapsul design document call synops , number correspond apocalyps . perl 6 intend backward compat , though compat mode . 2001 , decid perl 6 would run cross-languag virtual machin call parrot . mean languag target parrot gain nativ access cpan allow level cross-languag develop . 2005 audrey tang creat pug project , implement perl 6 haskel . continu act test platform perl 6 languag ( separ develop actual implement ) allow languag design explor . pug project spawn activ perl/haskel cross-languag commun center around freenod # perl6 irc channel . number featur perl 6 languag show similar haskel , perl 6 embrac haskel commun potenti script languag . 2006 , perl 6 , parrot , pug activ develop , new modul perl 5 call v6 allow perl 6 code run directli top perl 5 . 2006 , effort start window perl distribut ship compil , order make need binari packag window redund . earli result includ camelpack macro-instal vanilla perl distribut . # # fun perl perl strong cultur mani tradit , sever practic pure recreat valu . c , obfusc code competit well-known pastim . annual obfusc perl contest made arch virtu perl 's syntact flexibl . follow program print text `` anoth perl / unix hacker '' , use 32 concurr process coordin pipe . complet explan avail author 's web site . @ p=split// , '' .urruu\c8r '' ; @ d=split// , '' \nrekcah xinu / lrep rehtona tsuj '' ; sub p { @ p { `` r $ p '' , '' u $ p '' } = ( p , p ) ; pipe '' r $ p '' , '' u $ p '' ; ++ $ p ; ( $ q * =2 ) += $ f= ! fork ; map { $ p= $ p [ $ f^ord ( $ p { $ _ } ) & 6 ] ; $ p { $ _ } =/ ^ $ p/ix ? $ p : close $ _ } key % p } p ; p ; p ; p ; p ; map { $ p { $ _ } =~/^ [ p. ] / & & close $ _ } % p ; wait $ ? ; map { /^r/ & & < $ _ > } % p ; $ _= $ [ $ q ] ; sleep rand ( 2 ) if/\s/ ; print also exampl disciplin similar obfusc code , somewhat distinct , known `` japh . '' parlanc perl cultur , perl programm known perl hacker , deriv practic write short program print phrase `` anoth perl hacker , '' . spirit origin concept , program moder obfusc short enough fit signatur email usenet messag . `` canon '' japh includ comma end , although often omit . mani variant theme creat , eg . , print `` anoth perl pirat ! '' . anoth popular divers `` perl golf , '' goal physic sport : reduc number stroke take complet particular object . context , `` stroke '' refer keystrok , rather swing golf club . object narrowli defin non-trivi task , `` scan input string return longest palindrom contain . '' particip tri outdo write solut requir ever fewer charact perl sourc code . similar obfusc code golf , differ purpos , perl poetri practic write poem actual compil legal ( although gener non-sens ) perl code . hobbi less uniqu perl due larg number regular english word use languag . new poem regularli publish perl monk site 's perl poetri section . part perl lore black perl , infam exampl perl poetri . also mani exampl code written pure entertain cpan . exampl includ modul lingua : :romana : :perligata , allow write program latin . upon execut program , modul translat sourc code regular perl run . perl commun set asid `` acm '' namespac modul fun natur ( scope widen includ exploratori experiment code modul meant ever use product ) . acm modul deliber implement amus way . exampl : acm : :bleach , one first modul acm : : namespac , allow program 's sourc code `` whiten '' ( i.e. , charact replac whitespac ) yet still work . exampl sourc filter . also number sourc filter acm namespac . acm : :hello simplifi process write `` hello , world ! '' program acm : :currenc allow chang `` $ '' prefix scalar variabl charact acm : :progressbar purpos horribl ineffici way indic progress task acm : :verysign satir widely-critic verisign site finder servic acm : :do n't implement logic opposit keyword : n't keyword , take block execut . ( note use , n't { ... } thing { ... } . n't , either . )